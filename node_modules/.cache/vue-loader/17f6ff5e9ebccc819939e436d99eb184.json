{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/src/components/Register.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/src/components/Register.vue","mtime":1605186369303},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiBMb2Nrc2NyZWVuIFBhZ2UgKi8K"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA","file":"Register.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"container\">\n    <div class=\"phone\"><img src=\"../assets/phone.svg\" alt=\"Phone\" /></div>\n    <div class=\"form__wrapper\">\n        <form @submit.prevent=\"register\">\n            <img src=\"../assets/avatar.svg\" alt=\"Avatar\" class=\"form__img\" />\n            <h5 class=\"form__title\">Register Now!</h5>\n            <div class=\"input__container one\">\n                <div class=\"input__icon\">\n                    <i class=\"fa fa-envelope\"></i>\n                </div>\n                <div class=\"input__wrapper\">\n                    <h5 class=\"input__title\">Email</h5>\n                    <input type=\"email\" class=\"input\" name=\"email\" v-model=\"form.email\" />\n                </div>\n\n            </div>\n            <div class=\"input__container one\">\n                <div class=\"input__icon\">\n                    <i class=\"fa fa-user\"></i>\n                </div>\n                <div class=\"input__wrapper\">\n                    <h5 class=\"input__title\">Username</h5>\n                    <input type=\"text\" class=\"input\" name=\"username\" v-model=\"form.username\" />\n                </div>\n            </div>\n            <div class=\"input__container two\">\n                <div class=\"input__icon\">\n                    <i class=\"fa fa-lock\"></i>\n                </div>\n                <div class=\"input__wrapper\">\n                    <h5 class=\"input__title\">Password</h5>\n                    <input type=\"password\" class=\"input\" name=\"password\" v-model=\"form.password\" />\n                </div>\n            </div>\n            <div class=\"input__container two\">\n                <div class=\"input__icon\">\n                    <i class=\"fa fa-lock\"></i>\n                </div>\n                <div class=\"input__wrapper\">\n                    <h5 class=\"input__title\">Password Confirmation</h5>\n                    <input type=\"password\" class=\"input\" name=\"password_confirmation\" v-model=\"form.password_confirmation\" />\n                </div>\n            </div>\n            <input type=\"submit\" class=\"form__submit\" value=\"Register\" />\n            Already a registered user? <router-link class=\"nav-link\" to=\"/\">Register</router-link>\n\n        </form>\n    </div>\n</div>\n</template>\n\n<style>\n/* Lockscreen Page */\n</style>\n\n<script>\nimport {\n    required,\n    requiredIf,\n    sameAs,\n    email\n} from \"vuelidate/lib/validators\";\nexport default {\n    data() {\n        return {\n            form: {\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                password_confirmation: \"\"\n            },\n            errors: [],\n            savingUser: false\n        }\n    },\n    validations: {\n        form: {\n            username: {\n                required\n            },\n            email: {\n                required,\n                email\n            },\n            password: {\n                required\n            },\n            password_confirmation: {\n                required,\n                sameAs: sameAs('password')\n            }\n\n        }\n    },\n\n    methods: {\n        async register() {\n            // this.errors = this.$v.form.$invalid;\n            this.errors = this.$v.form.$touch();\n\n            if (this.errors === false) {\n                try {\n                    this.savingUser = true;\n                    const payload = {\n                        ...this.form,\n                        username: this.form.username,\n                        email: this.form.email,\n                        password: this.form.password\n                    };\n                    const response = await this.$store.dispatch(\n                        \"REGISTER\",\n                        payload\n                    );\n                    if (response) {\n                        this.$router.push('/');\n\n                    }\n                } catch (error) {\n                    console.log(error)\n                }\n\n                this.savingUser = false;\n            }\n\n            // this.$validator.validateAll().then(result => {\n            //     if (result) {\n            //         const payload = {\n            //             ...this.form,\n            //             username: this.form.username,\n            //             email: this.form.email,\n            //             password: this.form.pREGISTERassword\n            //         }\n            //         this.$store.dispatch('', payload);\n            //     }\n            // });\n\n            // const payload = {\n            //     ...this.form,\n            //     username: this.form.username,\n            //     email: this.form.email,\n            //     password: this.form.password\n            // }\n            // this.$store.dispatch('REGISTER', payload)\n            //     .then(response => {\n            //         success(\"User Registered!Check Your Email For Activation Code\");\n            //         this.form = \"\"\n            //         this.$router.push('/');\n            //     })\n            //     .catch(err => {\n            //         console.log(err)\n            //         // this.errors = err.response.data\n            //     });\n        }\n\n    }\n}\n</script>\n"]}]}