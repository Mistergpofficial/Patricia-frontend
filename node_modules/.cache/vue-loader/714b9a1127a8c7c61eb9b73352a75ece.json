{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/src/components/Profile.vue?vue&type=template&id=bf1681ae&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/src/components/Profile.vue","mtime":1605270183695},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/user-app/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}